<?php

namespace DoctrineORMModule\Proxy\__CG__\LSTicket\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Ticket extends \LSTicket\Entity\Ticket implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'title', 'dateBegin', 'dateEnd', 'dateEstimated', 'sought', 'active', 'categoryTicket', 'priority', 'user');
        }

        return array('__isInitialized__', 'id', 'title', 'dateBegin', 'dateEnd', 'dateEstimated', 'sought', 'active', 'categoryTicket', 'priority', 'user');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Ticket $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateBegin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateBegin', array());

        return parent::setDateBegin();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateBegin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateBegin', array());

        return parent::getDateBegin();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEnd($dateEnd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEnd', array($dateEnd));

        return parent::setDateEnd($dateEnd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEnd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEnd', array());

        return parent::getDateEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEstimated($dateEstimated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEstimated', array($dateEstimated));

        return parent::setDateEstimated($dateEstimated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEstimated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEstimated', array());

        return parent::getDateEstimated();
    }

    /**
     * {@inheritDoc}
     */
    public function setSought($sought)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSought', array($sought));

        return parent::setSought($sought);
    }

    /**
     * {@inheritDoc}
     */
    public function getSought()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSought', array());

        return parent::getSought();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryTicket(\LSCategoryticket\Entity\CategoryTicket $categoryTicket = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryTicket', array($categoryTicket));

        return parent::setCategoryTicket($categoryTicket);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryTicket()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryTicket', array());

        return parent::getCategoryTicket();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority(\LSPriority\Entity\Priority $priority = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', array($priority));

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', array());

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\LSUser\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
